name: Development (test)

on:
  push

jobs:
  update-db-main:
    runs-on: ubuntu-18.04
    strategy:
      max-parallel: 1
    steps:
    - name: Clone repository
      uses: actions/checkout@v2
      with:
        persist-credentials: false
        fetch-depth: 0
    - name: Install bsdtar
      run: sudo apt-get install libarchive-tools
    - name: Install aws
      uses: chrislennon/action-aws-cli@v1.1
    - name: Update db
      run: |
        # Import func
        source func.sh
        bucket=pacman-main.com
        upload=1
        del-pkg() {
          for j in $(aws-ls $arch/ | grep $1); do
            dir_sp2=(${j//// })
            if [[ $1 = $(get_name ${dir_sp2[-1]}) ]]; then
              aws-rm $j
              break
            fi
          done
        }
        # Go to
        cd main
        for arch in aarch64 arm i686 x86_64; do
          # Get db
          for i in db files; do
            get-object $arch/main.$i main.$i.tar.gz
          done
          # Delete packages
          echo "ok0"
          packages=$(aws-ls $arch/output/ | grep deleted_packages.txt)
          echo "ok1"
          if [[ -n $packages ]]; then
            echo "ok2"
            get-object $packages deleted_packages.txt
            for i in $(cat deleted_packages.txt); do
              ./repo-remove.sh main.db.tar.gz $i
              del-pkg $i
            done
            aws-rm $packages
            upload=0
          fi
          # Update packages
          packages=$(aws-ls $arch/output/ | grep .pkg.)
          if [[ -n $packages ]]; then
            for i in $packages; do
              dir_sp=(${i//// })
              file=${dir_sp[-1]}
              del-pkg $(get_name $file)
              get-object $i $file
              aws-mv $i $arch/
              ./repo-add.sh main.db.tar.gz $file
            done
            upload=0
          fi
          # Upload db
          if [[ $upload = 0 ]]; then
            for i in db files; do
              put-object $arch/main.$i main.$i.tar.gz
            done
          fi
          # Del db
          rm main.*
        done
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

