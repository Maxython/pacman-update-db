name: Update db x11

# Version: 2.2

on:
  #push
  schedule:
   - cron:  '0,30 0-23 * * *'

jobs:
  update-db-x11:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target_arch: [aarch64, arm, i686, x86_64]
    steps:
    - name: Clone repository
      uses: actions/checkout@v3
      with:
        persist-credentials: false
        fetch-depth: 0
    - name: Install bsdtar
      run: sudo apt-get install libarchive-tools
    - name: Install aws
      run: |
        git clone https://github.com/termux-pacman/aws-cli-action.git
        ./aws-cli-action/setup.sh '${{ secrets.AWS_ACCESS_KEY_ID }}' '${{ secrets.AWS_ACCESS_KEY }}' '${{ secrets.AWS_REGION }}'
    - name: Update db
      run: |
        # Import func
        source ./aws-cli-action/func.sh
        bucket=termux-x11.pacman
        upload=1
        # Go to
        cd x11/${{ matrix.target_arch }}
        # Get db
        for i in db files; do
          get-object ${{ matrix.target_arch }}/x11.$i x11.$i.tar.gz
        done
        # Delete packages
        files=$(aws-ls ${{ matrix.target_arch }}/pkgs/ deleted_packages.txt)
        if [[ -n $files ]]; then
          get-object ${{ matrix.target_arch }}/pkgs/$files deleted_packages.txt
          for i in $(cat deleted_packages.txt); do
            ./repo-remove.sh x11.db.tar.gz $i || true
            del-pkg $(echo $i | sed 's/+/0/g')
          done
          aws-rm ${{ matrix.target_arch }}/pkgs/$files
          upload=0
        fi
        # Update packages
        files=$(aws-ls ${{ matrix.target_arch }}/pkgs/ .pkg.)
        if [[ -n $files ]]; then
          for i in $files; do
            i2=$(echo $i | sed 's/+/0/g')
            del-pkg $(get_name $i2)
            get-object ${{ matrix.target_arch }}/pkgs/$i $i2
            ./repo-add.sh x11.db.tar.gz $i2
            aws-mv ${{ matrix.target_arch }}/pkgs/$i ${{ matrix.target_arch }}/$i2
          done
          upload=0
        fi
        # Upload db
        if [[ $upload = 0 ]]; then
          for i in db files; do
            put-object ${{ matrix.target_arch }}/x11.$i x11.$i.tar.gz
          done
        fi
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

